/*
 * File: app/view/vwprtLoginViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('reservas_puce.view.vwprtLoginViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.vwprtlogin',

    onTextfieldSpecialkey: function(field, e, eOpts) {
        if(e.getKey() == e.ENTER)
        {
            this.onButtonClick();
        }
    },

    onButtonClick: function(button, e, eOpts) {
        var forma = this.getView().down('#FormaLogin').getForm();
        if(forma.isValid())
        {
            forma.submit(
            {
                url: '../servidor/login/revisa',
                method: 'post',
                scope: this,
                success: function(response, opts)
                {
                    var responseData = opts.result.data;

                    VERIFICADO = responseData.verified;
                    USUARIO = responseData.usuario_apps;
                    NOMBRE = responseData.nombre_apps;

                    if(VERIFICADO === true){


                        this.getView().destroy();
                        Ext.create('reservas_puce.view.vwprtPrincipal', {renderTo: Ext.getBody()});
                        Ext.getCmp('dplyNombre').setText(NOMBRE);
                        ROl = responseData.rolAp_apps;
                        var storeTipo = Ext.getStore('Tipo');
                        storeTipo.load();
                        var storeEstado = Ext.getStore('Estado');
                        storeEstado.load();
                        Ext.getCmp('mnUsuario').setVisible(false);
                        Ext.getCmp('mnTipo').setVisible(false);
                        Ext.getCmp('mnLugar').setVisible(false);
                        Ext.getCmp('mnHorario').setVisible(false);
                        if(ROl !== null)
                        {
                            var ROL = new Array(ROl.length);
                            for(i=0;i<ROl.length;i++)
                            {
                                ROL[i]=parseInt(ROl[i].id_rol);
                            }
                            if(Ext.Array.contains(ROL, 4)===true){
                                Ext.getCmp('mnUsuario').setVisible(true);
                            }
                            if(Ext.Array.contains(ROL, 5)===true){
                                Ext.getCmp('mnTipo').setVisible(true);
                            }
                            if(Ext.Array.contains(ROL, 2)===true){
                                Ext.getCmp('mnLugar').setVisible(true);
                            }
                            if(Ext.Array.contains(ROL, 1)===true){
                                Ext.getCmp('mnHorario').setVisible(true);
                            }
                        }
                    }else{
                        Ext.Msg.show({
                            title:'Error',
                            msg: 'Usted no tiene permisos para acceder',
                            buttons: Ext.Msg.OK,
                            icon: Ext.MessageBox.ERROR
                        });

                    }
                },

                failure: function(response, opts)
                {
                    Ext.Msg.show({
                        title:'Error',
                        msg: 'Usuario o clave mal ingresados',
                        buttons: Ext.Msg.OK,
                        icon: Ext.MessageBox.WARNING
                    });
                }
            });
        }
        else
        {
            Ext.Msg.alert('Error', 'Debe llenar todos los campos');
        }
    }

});
