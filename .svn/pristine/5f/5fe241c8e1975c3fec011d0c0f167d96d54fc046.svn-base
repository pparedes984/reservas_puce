/*
 * File: app/view/pnlReservaViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('reservas_puce.view.pnlReservaViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.pnlreserva',

    onBtNBuscarClick: function(button, e, eOpts) {
        var g = Ext.getCmp('grdReserva');
        var arrayKeys = g.getSelectionModel().selected.items;
        var indice = g.getSelectionModel().selectionStartIdx;

        if(Ext.getCmp('txtFechaBuscar').getValue()!== null || Ext.getCmp('txtUsuarioBuscar').getValue()!== ''){
            /**var rec = g.selection;
            Ext.Ajax.request({
            url: '../servidor/reservas_puce/reserva/get',
            method:"post",

            params:{
            fecha: Ext.getCmp('txtFechaBuscar').getValue(),
            },

            success: function(result, success)
            {
            var responseData = Ext.JSON.decode(result.responseText);
            if(responseData.success)
            {**/
            var storeReserva = Ext.getStore('Reserva');
            storeReserva.removeAll();
            storeReserva.proxy.extraParams = {
                bandera: 1,
                fecha: Ext.getCmp('txtFechaBuscar').getValue(),
                usuario:Ext.getCmp('txtUsuarioBuscar').getValue()
            };
            storeReserva.load();
            /**}
            else
            {
            Ext.Msg.alert('Alerta', 'No existe reservas esta fecha.');
            }
            },

            failure: function(batch, success)
            {
            Ext.Msg.alert('Error', 'Hubor un error');
            }
            });**/
        }
        else{
            Ext.Msg.alert('Alerta','Debe añadir una fecha o usuario para buscar reservas');
        }


    },

    onBtnReservaNuevoClick: function(button, e, eOpts) {
        if(!Ext.getCmp('pnlNuevaReserva'))
        {
            ME.getView().down('#pnlCentral').removeAll();
            var panel = Ext.create('reservas_puce.view.pnlNuevaReserva');
            ME.getView().down('#pnlCentral').add(panel);
            var storeLugar = Ext.getStore('Lugar');
            storeLugar.proxy.extraParams = {
                busqueda: 3,
                id_lugar: null
            };
            storeLugar.load();
            var storeHorario = Ext.getStore('Horario');
            storeHorario.removeAll();


        }
    },

    onBtnReservaEliminarClick: function(button, e, eOpts) {
        var g = Ext.getCmp('grdReservaUsuario');
        var arrayKeys = g.getSelectionModel().selected.items;
        var indice = g.getSelectionModel().selectionStartIdx;

        if(arrayKeys.length === 0)
        Ext.Msg.alert('Error', 'Debe escoger un tipo');
        else
        {Ext.Msg.show({
            title: 'Atención',
            msg: 'Está seguro de borrar este registro?',
            icon: Ext.Msg.QUESTION,
            buttonText: {
                yes: 'Si',
                no: 'No'
            },
            buttons: Ext.Msg.YESNO,
            fn: function (btn) {
                if (btn == 'yes') {
                    var store = g.getStore();
                    var rec = g.selection;
                    Ext.Ajax.request({
                        url: '../servidor/reservas_puce/reserva/delete',
                        method:"post",
                        params: {
                            id: rec.data.id
                        },
                        success: function( result, request ) {
                            var responseData = Ext.JSON.decode(result.responseText);
                            if(responseData.success)
                            {

                                store.remove(rec);
                                store.sync(
                                {
                                    params:{
                                        id: rec.data.id
                                    },
                                    success: function(batch, success)
                                    {
                                        store.commitChanges();
                                        store.load();
                                        Ext.Msg.alert('Alerta', 'Se ha eliminado el registro exitosamente');
                                    },

                                    failure: function(batch, success)
                                    {
                                        Ext.Msg.alert('Error', 'Hubor un error');
                                    }
                                });
                            }
                            else
                            {
                                Ext.Msg.alert('Alerta','Este registro tiene datos asociados.');
                            }
                        },

                        failure: function(response, opts) {
                            console.log('server-side failure with status code ' + response.status);
                        }
                    });
                }}});
            }
    },

    onCheckcolumnCheckChange: function(checkcolumn, rowIndex, checked, eOpts) {
        /*var grid = Ext.getCmp('grdReserva');
        var arrayKeys = grid.getSelectionModel().selected.items;
        var indice = grid.getSelectionModel().selectionStartIdx;
        var store = Ext.getStore('Reserva');*/

        var store = Ext.getCmp('grdReserva').getStore();
        var g = Ext.getCmp('grdReserva');
        var asistencia =  g.store.getAt(rowIndex).data.asistencia;
        var id = g.store.getAt(rowIndex).data.id;
        store.sync(
        {
            params:{
                asistencia: asistencia,
                id: id

            },

            success: function(batch, success)
            {
                store.load();
            },

            failure: function(batch, success)
            {
                Ext.Msg.alert('Error', 'Hubo un error');
            }
        });
    }

});
